package routes

import (
	"quark/client/web/components"
)

templ Chat_Page() {
	@components.Base_HTML() {
		<script>
	document.body.addEventListener("htmx:wsBeforeSend", (event) => {
		event.preventDefault()
		const message = {...JSON.parse(event.detail.message)}
		if (message.body.length != 0 || message.body != "") {
			const socket = event.detail.socketWrapper
			socket.send(JSON.stringify(message))
		}
	})
	document.body.addEventListener("htmx:wsAfterMessage", (event) => {
		const messageList = document.getElementById("MessageList")
		const message = JSON.parse(event.detail.message)
		document.getElementById("MessageInput").value = ""
		switch (message.type) {
			case "JOIN":
				messageList.insertAdjacentHTML("beforeend", `<div class="flex justify-center text-semibold">
					${message.username + " joined the server"}
				</div>`)
				break;
			case "MSG":
				messageList.insertAdjacentHTML("beforeend", `<div class="flex flex-col ${message.same ? 'items-end' : 'items-start'}">
				<div class="bg-info rounded-xl flex flex-col ${message.same ? 'items-end' : 'items-start'}">
					<p class="text-lg font-semibold text-base-content w-fit pl-2 pr-2" >${message.username}</p>
					<p class="text-base-200 pl-2 pr-4 py-1 max-w-[400px] text-left">${message.body}</p>
					</div>
				</div>`)
				break;
			case "LEAVE":
				messageList.insertAdjacentHTML("beforeend", `<div class="flex justify-center text-semibold">
					${message.username + " left the server"}
				</div>`)
				break;
		}
	})
</script>
		<div hx-ext="ws" ws-connect={ ctx.Value("realtime_server_addr").(string) }>
			<div
				class="sticky top-0 right-0 left-0 flex items-center justify-center p-3 backdrop-blur shadow-lg md:shadow-none z-50"
			>
				<div class="flex items-center justify-end w-full max-w-[1000px]">
					<div class="dropdown dropdown-end">
						<svg
							tabindex="0"
							role="button"
							xmlns="http://www.w3.org/2000/svg"
							stroke-width="1.5"
							class="stroke-base-200 shrink-0 h-8 w-8"
							fill="none"
							viewBox="0 0 24 24"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75"
							></path>
						</svg>
						<ul class="p-2 mr-[15px] shadow menu dropdown-content z-[1] bg-info text-info-content rounded-md w-fit">
							<button
								class="btn btn-ghost btn-sm btn-wide max-w-[80px]"
								hx-swap="none"
								hx-get="/auth/logout"
							>Logout</button>
						</ul>
					</div>
				</div>
			</div>
			<div class="flex justify-center w-full mb-[120px]">
				<div id="MessageList" class="flex flex-col w-full gap-[25px] p-3 max-w-[1200px]"></div>
			</div>
			<div class="fixed left-0 right-0 bottom-0 flex items-center justify-center bg-base-100 z-[10]">
				<form ws-send class="p-3 flex items-center justify-center gap-3 w-full max-w-[800px]">
					<input
						id="MessageInput"
						name="body"
						placeholder="Message"
						autocomplete="off"
						class="input border-neutral focus:outline-none focus:border-primary placeholder-base-200 w-full"
					/>
					<button type="submit" class="btn btn-primary btn-wide max-w-[100px]">Send</button>
				</form>
			</div>
		</div>
	}
}
