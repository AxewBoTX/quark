package routes

import (
	"quark/client/web/components"
)

templ Chat_Page() {
	@components.Base_HTML() {
		<script>
	document.body.addEventListener("htmx:wsBeforeSend", (event) => {
		event.preventDefault()
		const message = {...JSON.parse(event.detail.message)}
		const socket = event.detail.socketWrapper
		socket.send(JSON.stringify(message))
	})
	document.body.addEventListener("htmx:wsAfterMessage", (event) => {
		const messageList = document.getElementById("MessageList")
		const message = JSON.parse(event.detail.message)
		document.getElementById("MessageInput").value = ""
		switch (message.type) {
			case "JOIN":
				messageList.insertAdjacentHTML("beforeend", `<div class="flex justify-center text-semibold">
					${message.username + " joined the server"}
				</div>`)
				break;
			case "MSG":
				messageList.insertAdjacentHTML("beforeend", `<div class="flex flex-col items-start">
				<p class="text-lg font-semibold bg-secondary text-secondary-content w-fit pl-1 pr-2 rounded-tl-lg rounded-tr-lg" >${message.username}</p>
				<p class="bg-accent text-accent-content rounded-tl-none rounded-bl-badge rounded-r-badge px-4 py-1 max-w-[400px]">${message.body}</p>
		</div>`)
				break;
			case "LEAVE":
				messageList.insertAdjacentHTML("beforeend", `<div class="flex justify-center text-semibold">
					${message.username + " left the server"}
				</div>`)
				break;
		}
	})
</script>
		<div hx-ext="ws" ws-connect={ ctx.Value("realtime_server_addr").(string) }>
			<div class="fixed top-0 right-0 p-2">
				<div class="dropdown dropdown-end">
					<svg
						tabindex="0"
						role="button"
						xmlns="http://www.w3.org/2000/svg"
						class="stroke-base-200 shrink-0 h-8 w-8"
						fill="none"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z"
						></path>
					</svg>
					<ul class="p-2 mr-[15px] shadow menu dropdown-content z-[1] bg-info text-info-content rounded-md w-fit">
						<button
							class="btn btn-ghost btn-sm btn-wide max-w-[80px]"
							hx-swap="none"
							hx-get="/auth/logout"
						>Logout</button>
					</ul>
				</div>
			</div>
			<div class="flex justify-center w-full mb-[120px]">
				<div id="MessageList" class="flex flex-col w-full gap-[25px] p-3 max-w-[1200px]"></div>
			</div>
			<div class="fixed left-0 right-0 bottom-0 flex items-center justify-center">
				<form ws-send class="p-3 flex items-center justify-center gap-3 w-full max-w-[800px]">
					<input
						id="MessageInput"
						name="body"
						placeholder="Message"
						autocomplete="off"
						class="input border-neutral focus:outline-none focus:border-primary placeholder-base-200 w-full max-w-[250px]"
					/>
					<button type="submit" class="btn btn-primary btn-wide max-w-[100px]">Send</button>
				</form>
			</div>
		</div>
	}
}
